¡Tienes toda la razón! El problema más común al intentar cargar archivos directamente desde GitHub es que la URL que te da la interfaz web (github.com/...) no es la URL para acceder a los archivos raw (crudos) que fetch puede leer directamente. Además, hay que especificar la rama.

La URL que usé en el código anterior (https://raw.githubusercontent.com/francazorlaa/Repositorio-TFG/main/h5p_interactive_video_template/) es la correcta para acceder a archivos raw.

¿Por qué no carga ningún fichero y me da error 404?

El error 404 significa "No encontrado". Esto apunta a que la ruta construida para cada archivo (GITHUB_RAW_BASE_URL + filePath) no existe en el repositorio o la rama especificada.

Revisando la estructura de tu repositorio Repositorio-TFG en GitHub, es muy probable que la plantilla H5P de vídeo interactivo no esté directamente en una carpeta llamada h5p_interactive_video_template en la raíz de la rama main.

Para que funcione, necesitamos la ruta exacta de la carpeta raíz de tu plantilla H5P dentro de tu repositorio.

Por favor, haz lo siguiente:

Ve a tu repositorio de GitHub: https://github.com/francazorlaa/Repositorio-TFG

Navega a la carpeta donde tienes todos los archivos de la plantilla H5P de "Vídeo Interactivo" (H5P.Summary-1.10, FontAwesome-4.5, H5P.JoubelUI-1.3, etc., junto con h5p.json y la carpeta content).

Copia la URL de esa carpeta en tu navegador.

Ejemplo:
Si tu estructura es así:
Repositorio-TFG/
├── my_project/
│ ├── h5p_templates/
│ │ ├── interactive_video_template/
│ │ │ ├── h5p.json
│ │ │ ├── content/
│ │ │ ├── H5P.Video-1.6/
│ │ │ └── ...

Entonces la URL de la carpeta en GitHub podría ser algo como:
https://github.com/francazorlaa/Repositorio-TFG/tree/main/my_project/h5p_templates/interactive_video_template

De esa URL, necesito que me digas la parte que va después de /main/.

Por ejemplo, si la URL fuera la de arriba, la parte que necesito sería:
my_project/h5p_templates/interactive_video_template/

Una vez que me proporciones esa ruta exacta, ajustaré la GITHUB_RAW_BASE_URL en el código y debería funcionar.

Mientras tanto, he hecho un pequeño ajuste en el CSS para que los mensajes de error sean un poco más visibles en el log, usando word-break: break-all; para asegurar que las rutas largas no desborden el contenedor. El resto del código ya está preparado para la lógica de carga.